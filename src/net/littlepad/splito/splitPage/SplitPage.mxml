<?xml version="1.0" encoding="utf-8"?>
<s:HGroup gap="10" xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" xmlns:local="*"
		  xmlns:splitPages="net.littlepad.splito.splitPages.*" 
		  xmlns:view="net.littlepad.splito.splitPage.view.*"
		  creationComplete="init(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import net.littlepad.splito.splitPage.delegates.DragDelegate;
			import net.littlepad.splito.splitPage.delegates.DropDelegate;
			import net.littlepad.splito.splitPage.events.ImageEvent;
			import net.littlepad.splito.splitPage.events.SplitPageEvent; 
			
			public const SPLIT_PAGE_WIDTH:Number = Config.A6_PRINT_WIDTH * 2 - (Config.CLIPPING_WIDTH + Config.THROAT_MARGIN) * 2;
			public const SPLIT_PAGE_HEIGHT:Number = Config.A6_PRINT_HEIGHT;
			private const PAGE_RATIO:Number = SPLIT_PAGE_WIDTH / SPLIT_PAGE_HEIGHT;
			
			[Bindable]
			public var scale:Number;
			
			[Bindable]
			public var minScale:Number;
			
			private var _imageFile:File;
			
			/**
			 * 初期設定
			 * @param event FlexEvent
			 */
			private function init(event:FlexEvent):void
			{
				var dragDelegate:DragDelegate = new DragDelegate();
				dragDelegate.init(this);
				
				var dropDelegate:DropDelegate = new DropDelegate();
				dropDelegate.init(this);
			}
			
			/**
			 * 写真をセット
			 */
			public function setPhoto():void
			{
				leftPage.addEventListener(ImageEvent.READY, function():void{
					leftPage.removeEventListener(ImageEvent.READY, arguments.callee);
					rightPage.addEventListener(ImageEvent.READY, function():void{
						rightPage.removeEventListener(ImageEvent.READY, arguments.callee);
						// 写真を見開きページぴったりに収める
						minScale = this.scale = getJustFitPhotoScale();
						resizePhoto(this.scale);
						dispatchEvent(new SplitPageEvent(SplitPageEvent.DISPLAY_COMPLETE));
					});
					rightPage.photo.source = _imageFile.url;
				});
				leftPage.photo.source = _imageFile.url;
			}
			
			
			/**
			 * 見開きページにぴったり収まった時のスケールを返す
			 * @return scale
			 */
			private function getJustFitPhotoScale():Number
			{
				var result:Number;
				if(leftPage.photo.sourceWidth / leftPage.photo.sourceHeight > PAGE_RATIO) {
					// 横の方が大きい（縦フィット）
					result = SPLIT_PAGE_HEIGHT / leftPage.photo.sourceHeight;
				} else {
					// 縦の方が大きい（横フィット）
					result = SPLIT_PAGE_WIDTH / leftPage.photo.sourceWidth;
				}
				return result;
			}
			
			/**
			 * 写真の位置調整
			 */
			private function setPhotoPosition():void
			{
				if(leftPage.photo.sourceHeight*scale + leftPage.photo.y <= SPLIT_PAGE_HEIGHT){
					leftPage.photo.y += SPLIT_PAGE_HEIGHT - (leftPage.photo.sourceHeight*scale + leftPage.photo.y);
				}
				if(leftPage.photo.sourceWidth*scale + leftPage.photo.x <= SPLIT_PAGE_WIDTH){
					leftPage.photo.x += SPLIT_PAGE_WIDTH - (leftPage.photo.sourceWidth*scale + leftPage.photo.x);
				}
				rightPageSet();
			}
			
			/**
			 * 右ページの写真位置とサイズ調整
			 */
			private function rightPageSet():void
			{
				rightPage.photo.scaleX = rightPage.photo.scaleY = leftPage.photo.scaleX;
				rightPage.setPhotoPosition(leftPage.photo.x, leftPage.photo.y);
			}
			
			/**
			 * 写真をリサイズする
			 * @param newScale 新しいスケール
			 */
			public function resizePhoto(newScale:Number):void
			{
				if(newScale >= 1) {
					newScale = 1;
				} else if(newScale < minScale) {
					newScale = minScale;
				}
				this.scale = newScale;
				leftPage.photo.scaleX = leftPage.photo.scaleY = rightPage.photo.scaleX = rightPage.photo.scaleY = this.scale;
				setPhotoPosition();
			}
			
			public function getLeftPageRect():Rectangle
			{
				return new Rectangle(-int(leftPage.photo.x), -int(leftPage.photo.y), Config.A6_PRINT_WIDTH, Config.A6_PRINT_HEIGHT);
			}
			
			public function getRightPageRect():Rectangle
			{
				return new Rectangle(-int(rightPage.photo.x), -int(rightPage.photo.y), Config.A6_PRINT_WIDTH, Config.A6_PRINT_HEIGHT);
			}
			
			public function get imageFile():File { return _imageFile; }
			public function set imageFile(value:File):void { _imageFile = value; }
			
		]]>
	</fx:Script>
	
	<view:LeftPageComponent id="leftPage"/>
	<view:RightPageComponent id="rightPage"/>
</s:HGroup>
